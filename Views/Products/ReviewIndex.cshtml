@model ReviewViewModel
@{
    ViewData["Title"] = "ReviewIndex";
}

<h1>User Reviews</h1>




@foreach (var item in Model.Reviews)
{
    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => item.User)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => item.User)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => item.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => item.Rating)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => item.ReviewText)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => item.ReviewText)
        </dd>

    </dl> 
    @if (Model.Replies != null)
        {
        
        @foreach (var reply in Model.Replies)

            {
             @if (reply.ReviewID == item.Id)
         {

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => reply.ReplyText)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => reply.ReplyText)
            </dd>
            }
        }
    }



@if (User.IsInRole("Admin"))
{
    <a class="btn btn-danger" asp-action="DeleteReview" asp-route-productid="@item.ProductID" asp-route-id="@item.Id">Delete</a>

    <a class="btn btn-primary" asp-action="CreateReply" asp-route-productid="@item.ProductID" asp-route-id="@item.Id">Reply</a>
}

}
<div>
    <a class="btn btn-primary" asp-action="Index">Back to products</a>
</div>

